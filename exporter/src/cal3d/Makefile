# Makefile.in generated by automake 1.7.1 from Makefile.am.
# src/cal3d/Makefile.  Generated from Makefile.in by configure.

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

MAKE=make

# ************************************************************************
#
# This file is part of the Cal3D library/package
# Copyright (C) 2002 Bruno 'Beosil' Heidelberger (beosil@swileys.com)
#
# This library is free software; you can redistribute it and/or modify it
# under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation; either version 2.1 of the License, or (at
# your option) any later version.
#
# ************************************************************************

srcdir = .
top_srcdir = ../..

pkgdatadir = $(datadir)/cal3d
pkglibdir = $(libdir)/cal3d
pkgincludedir = $(includedir)/cal3d
top_builddir = ../..

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-mingw32
host_triplet = i686-pc-mingw32
target_triplet = i686-pc-mingw32
ACLOCAL = ${SHELL} /e/Install/_/3D/cal3d/cal3d-0.10.0/missing --run aclocal-1.7
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /e/Install/_/3D/cal3d/cal3d-0.10.0/missing --run tar
AS = as
AUTOCONF = ${SHELL} /e/Install/_/3D/cal3d/cal3d-0.10.0/missing --run autoconf
AUTOHEADER = ${SHELL} /e/Install/_/3D/cal3d/cal3d-0.10.0/missing --run autoheader
AUTOMAKE = ${SHELL} /e/Install/_/3D/cal3d/cal3d-0.10.0/missing --run automake-1.7
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -O2 -fno-rtti
CYGPATH_W = echo
DB2HTML = false
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = dlltool
DOXYGEN = false
ECHO = echo
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = grep -E
EXEEXT = .exe
F77 = 
FFLAGS = 
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /e/Install/_/3D/cal3d/cal3d-0.10.0/missing --run makeinfo
OBJDUMP = objdump
OBJEXT = o
PACKAGE = cal3d
PACKAGE_BUGREPORT = 
PACKAGE_NAME = 
PACKAGE_STRING = 
PACKAGE_TARNAME = 
PACKAGE_VERSION = 
PATH_SEPARATOR = :
RANLIB = ranlib
SET_MAKE = MAKE=make
SHELL = /bin/sh
STRIP = strip
VERSION = 0.10.0
ac_ct_AS = as
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DLLTOOL = dlltool
ac_ct_F77 = 
ac_ct_OBJDUMP = objdump
ac_ct_RANLIB = ranlib
ac_ct_STRIP = strip
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__fastdepCXX_FALSE = #
am__fastdepCXX_TRUE = 
am__include = include
am__quote = 
bindir = ${exec_prefix}/bin
build = i686-pc-mingw32
build_alias = 
build_cpu = i686
build_os = mingw32
build_vendor = pc
datadir = ${prefix}/share
exec_prefix = ${prefix}
host = i686-pc-mingw32
host_alias = 
host_cpu = i686
host_os = mingw32
host_vendor = pc
includedir = ${prefix}/include
infodir = ${prefix}/info
install_sh = /e/Install/_/3D/cal3d/cal3d-0.10.0/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localstatedir = ${prefix}/var
mandir = ${prefix}/man
oldincludedir = /usr/include
prefix = c:/prog/mingw
program_transform_name = s,x,x,
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target = i686-pc-mingw32
target_alias = 
target_cpu = i686
target_os = mingw32
target_vendor = pc

INCLUDES = $(all_includes) -I$(top_srcdir)/src

all_libraries = @all_libraries@
AM_LDFLAGS = 

EXTRA_DIST = cal3d.rc cal3d.dsp SConscript

lib_LTLIBRARIES = libcal3d.la

#
# Updating this number must *not* match the cal3d version. It must
# comply with the following rules (see the libtool documentation for
# more information):
#
#   The -version-info flag accepts an argument of the form
#`CURRENT[:REVISION[:AGE]]'.  So, passing `-version-info 10:0:0' sets
#CURRENT to 10, REVISION to 0, and AGE to 0.
#
# Note that AGE must be less than or equal to the CURRENT interface number.
#
#  1. Start with version information of `10:0:0' for each libtool library.
#
#  2. Update the version information only immediately before a public
#     release of your software.  More frequent updates are unnecessary,
#     and only guarantee that the current interface number gets larger
#     faster.
#
#  3. If the library source code has changed at all since the last
#     update, then increment REVISION (`C:R:A' becomes `C:r+1:A').
#
#  4. If any interfaces have been added, removed, or changed since the
#     last update, increment CURRENT, and set REVISION to 0.
#
#  5. If any interfaces have been added since the last public release,
#     then increment AGE.
#
#  6. If any interfaces have been removed since the last public release,
#     then set AGE to 0.
# 
#
VERSION_INFO = 11:0:0

libcal3d_la_SOURCES = animation.cpp animation_action.cpp animation_cycle.cpp bone.cpp buffersource.cpp cal3d_wrapper.cpp coreanimation.cpp corebone.cpp corekeyframe.cpp corematerial.cpp coremesh.cpp coremodel.cpp coreskeleton.cpp coresubmesh.cpp coresubmorphtarget.cpp coretrack.cpp error.cpp global.cpp hardwaremodel.cpp loader.cpp matrix.cpp mesh.cpp mixer.cpp model.cpp morphtargetmixer.cpp physique.cpp platform.cpp quaternion.cpp renderer.cpp saver.cpp skeleton.cpp springsystem.cpp streamsource.cpp submesh.cpp vector.cpp tinyxml.cpp tinyxmlerror.cpp tinyxmlparser.cpp tinystr.cpp coremorphanimation.cpp
libcal3d_la_LDFLAGS = $(all_libraries) -no-undefined -version-info $(VERSION_INFO) $(AM_LDFLAGS)

pkginclude_HEADERS = animation.h animation_action.h animation_cycle.h animcallback.h bone.h buffersource.h cal3d.h cal3d_wrapper.h coreanimation.h corebone.h corekeyframe.h corematerial.h coremesh.h coremodel.h coreskeleton.h coresubmesh.h coresubmorphtarget.h coretrack.h datasource.h error.h global.h hardwaremodel.h loader.h matrix.h mesh.h mixer.h model.h morphtargetmixer.h physique.h platform.h quaternion.h renderer.h resource.h saver.h skeleton.h springsystem.h streamsource.h submesh.h vector.h tinyxml.h tinystr.h coremorphanimation.h
subdir = src/cal3d
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
LTLIBRARIES = $(lib_LTLIBRARIES)

libcal3d_la_LIBADD =
am_libcal3d_la_OBJECTS = animation.lo animation_action.lo \
	animation_cycle.lo bone.lo buffersource.lo cal3d_wrapper.lo \
	coreanimation.lo corebone.lo corekeyframe.lo corematerial.lo \
	coremesh.lo coremodel.lo coreskeleton.lo coresubmesh.lo \
	coresubmorphtarget.lo coretrack.lo error.lo global.lo \
	hardwaremodel.lo loader.lo matrix.lo mesh.lo mixer.lo model.lo \
	morphtargetmixer.lo physique.lo platform.lo quaternion.lo \
	renderer.lo saver.lo skeleton.lo springsystem.lo \
	streamsource.lo submesh.lo vector.lo tinyxml.lo tinyxmlerror.lo \
	tinyxmlparser.lo tinystr.lo coremorphanimation.lo
libcal3d_la_OBJECTS = $(am_libcal3d_la_OBJECTS)

DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
DEP_FILES = ./$(DEPDIR)/animation.Plo \
	./$(DEPDIR)/animation_action.Plo \
	./$(DEPDIR)/animation_cycle.Plo \
	./$(DEPDIR)/bone.Plo ./$(DEPDIR)/buffersource.Plo \
	./$(DEPDIR)/cal3d_wrapper.Plo \
	./$(DEPDIR)/coreanimation.Plo \
	./$(DEPDIR)/corebone.Plo \
	./$(DEPDIR)/corekeyframe.Plo \
	./$(DEPDIR)/corematerial.Plo \
	./$(DEPDIR)/coremesh.Plo ./$(DEPDIR)/coremodel.Plo \
	./$(DEPDIR)/coremorphanimation.Plo \
	./$(DEPDIR)/coreskeleton.Plo \
	./$(DEPDIR)/coresubmesh.Plo \
	./$(DEPDIR)/coresubmorphtarget.Plo \
	./$(DEPDIR)/coretrack.Plo ./$(DEPDIR)/error.Plo \
	./$(DEPDIR)/global.Plo \
	./$(DEPDIR)/hardwaremodel.Plo \
	./$(DEPDIR)/loader.Plo ./$(DEPDIR)/matrix.Plo \
	./$(DEPDIR)/mesh.Plo ./$(DEPDIR)/mixer.Plo \
	./$(DEPDIR)/model.Plo \
	./$(DEPDIR)/morphtargetmixer.Plo \
	./$(DEPDIR)/physique.Plo ./$(DEPDIR)/platform.Plo \
	./$(DEPDIR)/quaternion.Plo ./$(DEPDIR)/renderer.Plo \
	./$(DEPDIR)/saver.Plo ./$(DEPDIR)/skeleton.Plo \
	./$(DEPDIR)/springsystem.Plo \
	./$(DEPDIR)/streamsource.Plo \
	./$(DEPDIR)/submesh.Plo ./$(DEPDIR)/tinystr.Plo \
	./$(DEPDIR)/tinyxml.Plo \
	./$(DEPDIR)/tinyxmlerror.Plo \
	./$(DEPDIR)/tinyxmlparser.Plo \
	./$(DEPDIR)/vector.Plo
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
DIST_SOURCES = $(libcal3d_la_SOURCES)
HEADERS = $(pkginclude_HEADERS)

DIST_COMMON = $(pkginclude_HEADERS) Makefile.am Makefile.in
SOURCES = $(libcal3d_la_SOURCES)

all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  Makefile.am  $(top_srcdir)/configure.in $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/cal3d/Makefile
Makefile:  $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)
libLTLIBRARIES_INSTALL = $(INSTALL)
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libdir)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f="`echo $$p | sed -e 's|^.*/||'`"; \
	    echo " $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) $$p $(DESTDIR)$(libdir)/$$f"; \
	    $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) $$p $(DESTDIR)$(libdir)/$$f; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	    p="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(LIBTOOL) --mode=uninstall rm -f $(DESTDIR)$(libdir)/$$p"; \
	  $(LIBTOOL) --mode=uninstall rm -f $(DESTDIR)$(libdir)/$$p; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" = "$$p" && dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libcal3d.la: $(libcal3d_la_OBJECTS) $(libcal3d_la_DEPENDENCIES) 
	$(CXXLINK) -rpath $(libdir) $(libcal3d_la_LDFLAGS) $(libcal3d_la_OBJECTS) $(libcal3d_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/animation.Plo
include ./$(DEPDIR)/animation_action.Plo
include ./$(DEPDIR)/animation_cycle.Plo
include ./$(DEPDIR)/bone.Plo
include ./$(DEPDIR)/buffersource.Plo
include ./$(DEPDIR)/cal3d_wrapper.Plo
include ./$(DEPDIR)/coreanimation.Plo
include ./$(DEPDIR)/corebone.Plo
include ./$(DEPDIR)/corekeyframe.Plo
include ./$(DEPDIR)/corematerial.Plo
include ./$(DEPDIR)/coremesh.Plo
include ./$(DEPDIR)/coremodel.Plo
include ./$(DEPDIR)/coremorphanimation.Plo
include ./$(DEPDIR)/coreskeleton.Plo
include ./$(DEPDIR)/coresubmesh.Plo
include ./$(DEPDIR)/coresubmorphtarget.Plo
include ./$(DEPDIR)/coretrack.Plo
include ./$(DEPDIR)/error.Plo
include ./$(DEPDIR)/global.Plo
include ./$(DEPDIR)/hardwaremodel.Plo
include ./$(DEPDIR)/loader.Plo
include ./$(DEPDIR)/matrix.Plo
include ./$(DEPDIR)/mesh.Plo
include ./$(DEPDIR)/mixer.Plo
include ./$(DEPDIR)/model.Plo
include ./$(DEPDIR)/morphtargetmixer.Plo
include ./$(DEPDIR)/physique.Plo
include ./$(DEPDIR)/platform.Plo
include ./$(DEPDIR)/quaternion.Plo
include ./$(DEPDIR)/renderer.Plo
include ./$(DEPDIR)/saver.Plo
include ./$(DEPDIR)/skeleton.Plo
include ./$(DEPDIR)/springsystem.Plo
include ./$(DEPDIR)/streamsource.Plo
include ./$(DEPDIR)/submesh.Plo
include ./$(DEPDIR)/tinystr.Plo
include ./$(DEPDIR)/tinyxml.Plo
include ./$(DEPDIR)/tinyxmlerror.Plo
include ./$(DEPDIR)/tinyxmlparser.Plo
include ./$(DEPDIR)/vector.Plo

distclean-depend:
	-rm -rf ./$(DEPDIR)

.cpp.o:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
	then mv "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

.cpp.obj:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'`; \
	then mv "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'`

.cpp.lo:
	if $(LTCXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
	then mv "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=yes \
#	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:
pkgincludeHEADERS_INSTALL = $(INSTALL_HEADER)
install-pkgincludeHEADERS: $(pkginclude_HEADERS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(pkgincludedir)
	@list='$(pkginclude_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(pkgincludeHEADERS_INSTALL) $$d$$p $(DESTDIR)$(pkgincludedir)/$$f"; \
	  $(pkgincludeHEADERS_INSTALL) $$d$$p $(DESTDIR)$(pkgincludedir)/$$f; \
	done

uninstall-pkgincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(pkginclude_HEADERS)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(pkgincludedir)/$$f"; \
	  rm -f $(DESTDIR)$(pkgincludedir)/$$f; \
	done

ETAGS = etags
ETAGSFLAGS =

CTAGS = ctags
CTAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ../..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(HEADERS)

installdirs:
	$(mkinstalldirs) $(DESTDIR)$(libdir) $(DESTDIR)$(pkgincludedir)

install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-am

distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am: install-pkgincludeHEADERS

install-exec-am: install-libLTLIBRARIES

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-info-am uninstall-libLTLIBRARIES \
	uninstall-pkgincludeHEADERS

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libLTLIBRARIES clean-libtool ctags distclean \
	distclean-compile distclean-depend distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am info \
	info-am install install-am install-data install-data-am \
	install-exec install-exec-am install-info install-info-am \
	install-libLTLIBRARIES install-man install-pkgincludeHEADERS \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool pdf \
	pdf-am ps ps-am tags uninstall uninstall-am uninstall-info-am \
	uninstall-libLTLIBRARIES uninstall-pkgincludeHEADERS


# *************************************************************************
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
